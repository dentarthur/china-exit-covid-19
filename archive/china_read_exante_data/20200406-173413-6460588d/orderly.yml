# You must have a script that does something with the data.  This
# will be a single string and the filename must exist when orderly is
# run
script: clean_data.R

# parameters:
#   - parallel
#   - scenario_name
#   - short_run

# You must list at least one artefact that your report will generate.
# Each artefact consists of one or more files.  The format is to list
# the "type" of an artefact (staticgraph, interactivegraph, data,
# report), then below that a description (free text) and then a
# filename as either a single file or an array of files
#
#     artefacts:
#       - staticgraph:
#           description: A graph of things
#           filenames: mygraph.png
#       - report:
#           description: A complex report
#           filenames:
#             - report.html
#             - figures/fig1.png
#             - figures/fig2.png
artefacts:
  # - report:
  #     description: Simple analysis of symptoms among deaths and exported cases
  #     filenames:
  #       - exported_cases_eda.docx
 - data:
      description: Processed list of exported cases
      filenames:
  #       - exported_cases_cleaned.csv
  #       - exported_cases_raw.csv
  #       - summary_by_country_cleaned.csv
  #       - summary_by_country_raw.csv 
  #       - time_exported_case_update.rds
       - exante_movement_data.csv
       - exante_movement_data.rds
       - top_six_pop_weighted_exante_movement_data.csv
       - top_six_pop_weighted_exante_movement_data.rds
       - movement_province_level_subset.csv
       - movement_province_level_subset.rds


#  - staticgraph:
#      description: plots for report
#      filenames:
       #- exante_movemet_data.png

# An optional name to describe the report in more detail than its
# directory name (which must be short) but less detail than
# "description" (which can be as long as you want).  Must be a string.
#
# displayname:

# An optional free-text description to decsribe the report in as much
# detail as you want.  Must be a string.  The yaml `>-` or `|` syntax
# might be useful for long descriptions.
#
# description:

# Packages that should be loaded before the script is run.  Use this
# in preference to explicit library() calls in your script because it
# will make it easier to provision containers to run the orderly
# reports.
packages:
#  - knitr
  - tidyr
  - dplyr
  - readxl
  - janitor
  - lubridate
#  - googlesheets4
  - ggplot2

# Source files, in addition to the script.  Typically these will
# contain function definitions.  These will be sourced after loading
# any packages, and before running your script.  Use this in
# preference to explicit source() calls in your script because
# otherwise you will have to add them to "resources" (see below)
#
sources:
  - functions/clean_data_functions.R
  - functions/test_functions.R
  
# Resources that the script needs to run; this is an array of strings
# representing filenames *relative to, and below, this directory*.
# These will be copied into place when the script is run, and again
# when commiting the report.  If you require a file and do not list it
# here, your script will fail!  (That's a good thing because we find
# out what your script actually needed immediately).  You do not need
# to list files already listed in "sources" here, or any .sql files
# referenced in "views" or "data"
#
resources:
# - read_exante_data.Rmd
#  - word_style.docx
#  - full_data_china_intracity_mobility.xlsx
  - top_six_provinces_population_size.xlsx
  - full_data_20200325.xlsx
  
# Indicate which reports your report depends on.  You can use this to
# pull in artefacts from previous reports.  You can depend in multiple
# reports.  The format looks like this:
#
depends:
  china_extract_new_case_data:
    id: latest
    use: 
      china_new_case_data.csv: china_new_case_data.csv
  
  
# depends:
#   si_from_literature:
#     id: latest
#     use:
#       si_from_literature.rds: si_from_literature.rds
#       si_mean_sd_from_literature.rds: si_mean_sd_from_literature.rds

requester: WHO
author: IC
